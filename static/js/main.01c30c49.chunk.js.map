{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","id","window","setInterval","setState","console","info","toUTCString","slice","this","prevProps","currentClockName","props","clockName","prevClockName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,KACjBC,QAAS,GAHb,uDAME,WAAqB,IAAD,OACZC,EAAKC,OAAOC,aAAY,WAC5B,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OAGjCM,QAAQC,KAAK,EAAKT,MAAMC,YAAYS,cAAcC,OAAO,IAAK,MAC7D,KAEHC,KAAKL,SAAS,CACZJ,QAASC,MAff,gCAmBE,SAAmBS,GACjB,IAAmBC,EAAqBF,KAAKG,MAArCC,UACWC,EAAkBJ,EAA7BG,UAEJF,IAAqBG,GAEvBT,QAAQU,MAAR,uBAA8BD,EAA9B,eAAkDH,MAzBxD,kCA6BE,WACET,OAAOc,cAAcP,KAAKZ,MAAMG,WA9BpC,oBAiCE,WACE,IAAQa,EAAcJ,KAAKG,MAAnBC,UACAf,EAAgBW,KAAKZ,MAArBC,YAER,OACE,sBAAKmB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGnB,EAAYS,cAAcC,OAAO,IAAK,YA9CjD,GAA2BU,aCN3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GASX,IAAMG,EAAb,4MACE1B,MAAQ,CACN2B,UAAU,EACVX,UAAW,UACXb,QAAS,GAJb,EA2BEyB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKvB,SAAS,CAAEoB,UAAU,KA7B9B,EAgCEI,gBAAkB,WAChB,EAAKxB,SAAS,CAAEoB,UAAU,KAjC9B,uDAOE,WAAqB,IAAD,OACZvB,EAAKC,OAAOC,aAAY,WAC5B,EAAKC,SAAS,CAAES,UAAWM,QAC1B,MAEHV,KAAKL,SAAS,CACZJ,QAASC,IAGX4B,SAASC,iBAAiB,QAASrB,KAAKmB,iBACxCC,SAASC,iBAAiB,cAAerB,KAAKgB,oBAjBlD,kCAoBE,WACEvB,OAAOc,cAAcP,KAAKZ,MAAMG,SAEhC6B,SAASE,oBAAoB,QAAStB,KAAKmB,iBAC3CC,SAASE,oBAAoB,cAAetB,KAAKgB,oBAxBrD,oBAoCE,WACE,MAAgChB,KAAKZ,MAA7B2B,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WA3CvC,GAAyBK,aCdzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.01c30c49.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ninterface State {\n  currentTime: Date,\n  timerId: number,\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    const id = window.setInterval(() => {\n      this.setState({ currentTime: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.setState({\n      timerId: id,\n    });\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { clockName: currentClockName } = this.props;\n    const { clockName: prevClockName } = prevProps;\n\n    if (currentClockName !== prevClockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${currentClockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n  timerId: number;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    const id = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    this.setState({\n      timerId: id,\n    });\n\n    document.addEventListener('click', this.handleLeftClick);\n    document.addEventListener('contextmenu', this.handleRightClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}